{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","ErrorNotification","errorMessage","className","Notification","message","Contact","contact","onClick","name","number","Filter","filter","handleChange","value","onChange","PersonForm","props","onSubmit","handleSubmit","newAcquaintance","nameChangeHandler","numberChangeHandler","type","Acquaintances","filtered","handleClick","style","listStyleType","map","key","App","useState","setFilter","persons","setPersons","newPerson","setNewPerson","setErrorMessage","notification","setNotification","useEffect","contactService","then","response","data","previouslyAdded","some","person","contactsToShow","length","toLowerCase","includes","Fragment","event","target","preventDefault","personObject","window","confirm","personToReplace","find","p","updatedPerson","console","log","setTimeout","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23dd5c30.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'https://people-catalog.herokuapp.com/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { getAll, create, update, remove }\n","import React, { useState, useEffect } from 'react'\nimport contactService from './services/persons'\nimport './index.css'\n\nconst ErrorNotification = ({ errorMessage }) => {\n  if (errorMessage === null) {return null}\n\n  return (\n    <div className='error'>\n      {errorMessage}\n    </div>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {return null}\n\n  return (\n    <div className='notification'>\n      {message}\n    </div>\n  )\n}\n\nconst Contact = ({ contact, onClick }) => (\n  <li>\n    {contact.name} {contact.number} \n    <button onClick={() => onClick(contact.id)}>delete</button>\n  </li>\n)\n\nconst Filter = ({ filter, handleChange }) => (\n  <form>\n    <div>filter shown with: <input value={filter} onChange={handleChange}/></div>\n  </form> \n)\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.handleSubmit}>\n    <div>\n      name: <input value={props.newAcquaintance.name} onChange={props.nameChangeHandler} />\n    </div>\n    <div>\n      number: <input value={props.newAcquaintance.number} onChange={props.numberChangeHandler}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst Acquaintances = ({ filtered, handleClick }) => (\n  <ul style={{listStyleType: 'none'}}>\n      {filtered.map(contact => <Contact key={contact.id} contact={contact} onClick={handleClick} />)}\n  </ul>\n)\n\nconst App = () => {\n  const [ filter, setFilter ] = useState('')\n  const [ persons, setPersons] = useState([]) \n  const [ newPerson, setNewPerson ] = useState({ name: '', number: '', id: '' })\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    const eventHandler = response => {\n      setPersons(response.data)\n    }\n\n    contactService\n      .getAll()\n      .then(eventHandler)\n  }, [])\n\n  const previouslyAdded = persons.some(person => person.name === newPerson.name)\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newPerson.name,\n      number: newPerson.number\n    }\n\n    if (!previouslyAdded) {\n      contactService\n        .create(personObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n      })\n\n      setNotification(`Added ${newPerson.name}`)\n      setTimeout(() => {setNotification(null)}, 5000)\n\n    } else {\n      const replace = window.confirm(`${newPerson.name} is already added to phonebook, replace the old number with a new one?`)\n      if (replace) {\n        const personToReplace = persons.find(p => p.name === newPerson.name)\n        const updatedPerson = { ...personToReplace, number: newPerson.number }\n\n        const id = personToReplace.id\n        \n        contactService\n          .update(id, updatedPerson)\n          .then(response => {\n            console.log(response)\n            setPersons(persons.map(person => person.id !== id ? person : response.data))\n\n            setNotification(`Updated ${newPerson.name}`)\n            setTimeout(() => {setNotification(null)}, 5000)\n          })\n          .catch(error => {\n            setErrorMessage(`Failed to update ${newPerson.name}. Perhaps you ought to go fishing?`)\n            setTimeout(() => {setErrorMessage(null)}, 5000)\n          })\n      }\n    }\n\n    setNewPerson({ ...newPerson, name: '', number: '', id: ''})\n  }\n\n  const handleFilterChange = event => setFilter(event.target.value)\n\n  const handleNameChange = (event) => {\n    console.log('nameChange', event.target.value)\n    setNewPerson({ ...newPerson, name: event.target.value})\n  }\n\n  const handleNumberChange = (event) => {\n    console.log('numberChange', event.target.value)\n    setNewPerson({ ...newPerson, number: event.target.value})\n  }\n\n  const handleRemoveClick = (id) => {\n    const name = persons.find(person => person.id === id).name\n\n    if (window.confirm(`Delete ${name} ?`)) {\n      contactService.remove(id)\n      setPersons(persons.filter(p => p.id !== id))\n\n      setNotification(`Removed ${name}`)\n        setTimeout(() => {setNotification(null)}, 5000)\n    }\n  }\n\n  const contactsToShow = filter.length === 0\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <React.Fragment>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <ErrorNotification errorMessage={errorMessage} />\n\n      <Filter filter={filter} handleChange={handleFilterChange}/>\n\n      <h3>add a new</h3>\n\n      <PersonForm handleSubmit={addPerson} numberChangeHandler={handleNumberChange}\n        newAcquaintance={newPerson} nameChangeHandler={handleNameChange} />\n\n      <h3>Numbers</h3>\n      <Acquaintances filtered={contactsToShow} handleClick={handleRemoveClick} />\n    </React.Fragment>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}